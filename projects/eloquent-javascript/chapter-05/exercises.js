// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function flatten(lists) {
  //concatenating sub arrays into one giant array aka flattening 
  return lists.reduce(function(flat, current) {return flat.concat(current)}, []);
}

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function loop(start, callback, update, body) {
  for (let value = start; callback(value); value = update(value)) {
    body(value);
  }
}

// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every(array, func) {
  for (let key of array) {
    if (!func(key)) return false;
  }
  return true;
}

// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection(string) {
  let ltr = [];
  let rtl = [];

  for (let i = 0; i < string.length; i++){
    let script = characterScript(string.charCodeAt(i));
    if (script !== null){
      if (script.direction === 'ltr'){
        ltr.push(script);
      } else {
        rtl.push(script);
      }
    }
  }

if (ltr.length > rtl.length){
  return 'ltr';
} else {
  return 'rtl';
}
}

// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};
